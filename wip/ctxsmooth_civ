#! /bin/bash

# set variables
cat <<EOF
COUNT=1
CIV='civet'
INPUT=`echo 'func_'${1}`
FWHM=`echo ${2}`
EOF

cat <<"EOF"
echo ''
echo '*************** Cortical Smoothing for Resting State fMRI **************'
echo '      were going to use the native-space Civet surfaces to get our   '
echo '  functional data on a surface, whence it will be smoothed and exported '
echo '           as an ASCII file to be readinto R / MATLAB / PYTHON          '
echo '************************************************************************'
echo ''

# convert civet surfaces to freesurfer binaries
if [ ! -f ${DIR}/proc/surf_wm_L.asc ]; then
    ConvertSurface \
        -i_mni ${DIR}/proc/surf_wm_L.obj \
        -o_fs ${DIR}/proc/surf_wm_L.asc \
        -sv ${DIR}/T1w/T1w_acpc_dc_restore_brain.nii.gz
fi

if [ ! -f ${DIR}/proc/surf_wm_R.asc ]; then
    ConvertSurface \
        -i_mni ${DIR}/proc/surf_wm_R.obj \
        -o_fs ${DIR}/proc/surf_wm_R.asc \
        -sv ${DIR}/T1w/T1w_acpc_dc_restore_brain.nii.gz
fi

if [ ! -f ${DIR}/proc/surf_mid_L.asc ]; then
    ConvertSurface \
        -i_mni ${DIR}/proc/surf_mid_L.obj \
        -o_fs ${DIR}/proc/surf_mid_L.asc \
        -sv ${DIR}/T1w/T1w_acpc_dc_restore_brain.nii.gz
fi

if [ ! -f ${DIR}/proc/surf_mid_R.asc ]; then
    ConvertSurface \
        -i_mni ${DIR}/proc/surf_mid_R.obj \
        -o_fs ${DIR}/proc/surf_mid_R.asc \
        -sv ${DIR}/T1w/T1w_acpc_dc_restore_brain.nii.gz
fi

if [ ! -f ${DIR}/proc/surf_gm_L.asc ]; then
    ConvertSurface \
        -i_mni ${DIR}/proc/surf_gm_L.obj \
        -o_fs ${DIR}/proc/surf_gm_L.asc \
        -sv ${DIR}/T1w/T1w_acpc_dc_restore_brain.nii.gz
fi

if [ ! -f ${DIR}/proc/surf_gm_R.asc ]; then
    ConvertSurface \
        -i_mni ${DIR}/proc/surf_gm_R.obj \
        -o_fs ${DIR}/proc/surf_gm_R.asc \
        -sv ${DIR}/T1w/T1w_acpc_dc_restore_brain.nii.gz
fi

# make an AFNI-COMPATIBLE spec file
# NB -- lack of absoloute paths here.
# this is likly because AFNI is poorly-written. 
# by hungry graduate students.
# instead of real people.

quickspec \
  -tn FS proc/surf_wm_L.asc \
  -tn FS proc/surf_wm_R.asc \
  -tn FS proc/surf_gm_L.asc \
  -tn FS proc/surf_gm_R.asc \
  -tn FS proc/surf_mid_L.asc \
  -tn FS proc/surf_mid_R.asc

## loop through runs
for RUN in `ls -d ${DIR}/MNINonLinear/Results/*/`; do

    # generate run number for filenames, add 1 to count
    NUM=`printf %02d ${COUNT}`
    COUNT=$(( $COUNT + 1 ))

    # Smooth cortical data on surface for each subject
    if [ ! -f ${DIR}/proc/func_surface_civ.L.${NUM}.1D.dset ]; then
        3dVol2Surf \
          -spec quick.spec \
          -surf_A proc/surf_wm_L.asc \
          -surf_B proc/surf_gm_L.asc \
          -sv T1w/T1w_acpc_dc_restore_brain.nii.gz \
          -grid_parent proc/${INPUT}.${NUM}.nii.gz \
          -map_func ave \
          -f_steps 15 \
          -f_index nodes \
          -outcols_NSD_format \
          -out_1D tmp/func_surface_civ.L.${NUM}.1D

        SurfSmooth \
          -met HEAT_07 \
          -spec quick.spec \
          -surf_A proc/surf_gm_L.asc \
          -input tmp/func_surface_civ.L.${NUM}.1D \
          -target_fwhm ${FWHM} \
          -output proc/func_surface_civ.L.${NUM}.1D
    fi

    if [ ! -f ${DIR}/proc/func_surface_civ.R.${NUM}.1D.dset ]; then
        3dVol2Surf \
          -spec quick.spec \
          -surf_A proc/surf_wm_R.asc \
          -surf_B proc/surf_gm_R.asc \
          -sv T1w/T1w_acpc_dc_restore_brain.nii.gz \
          -grid_parent proc/${INPUT}.${NUM}.nii.gz \
          -map_func ave \
          -f_steps 15 \
          -f_index nodes \
          -outcols_NSD_format \
          -out_1D tmp/func_surface_civ.R.${NUM}.1D
        
        SurfSmooth \
          -met HEAT_07 \
          -spec quick.spec \
          -surf_A proc/surf_wm_R.asc \
          -input tmp/func_surface_civ.R.${NUM}.1D \
          -target_fwhm ${FWHM} \
          -output proc/func_surface_civ.R.${NUM}.1D      
    fi
done
EOF

# suma -spec ${FS}/quick.spec \
#      -sv T1w/T1w_acpc_dc_restore_brain.nii.gz