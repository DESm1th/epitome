#!/bin/bash
#
# linreg_epi2mni_afni input dims
#
# input: input prefix
# dims:  target voxel dimensions (isotropic) [float]
#
# output: func_MNI-lin
# others: anat_EPI_mask_MNI-lin
# prereq: linreg_calc*afni
#
# Prepares data for analysis in MNI standard space, reslicing to the defined
# voxel dimensions.

echo '*** MODULE: linreg_epi2mni_afni. MNI-transforms functional data. ********'
export input=${1}
export dims=${2}

DIR_SESS=`ls -d -- ${DIR_DATA}/${DIR_EXPT}/${SUB}/${DATA_TYPE}/*/`
for SESS in ${DIR_SESS}; do
    DIR_RUNS=`ls -d -- ${SESS}/RUN*`
    for RUN in ${DIR_RUNS}; do
        NUM=`basename ${RUN} | sed 's/[^0-9]//g'`

        # register runs with MNI
        if [ ! -f ${SESS}/func_MNI-lin.${ID}.${NUM}.nii.gz ]; then
            3dAllineate \
                -prefix ${SESS}/func_MNI-lin.${ID}.${NUM}.nii.gz \
                -input ${SESS}/${input}.${ID}.${NUM}.nii.gz \
                -1Dmatrix_apply ${SESS}/mat_EPI_to_TAL.aff12.1D \
                -master ${DIR_DATA}/${DIR_EXPT}/anat_MNI.nii.gz \
                -float \
                -final wsinc5 \
                -mast_dxyz ${dims} ${dims} ${dims}
        fi
    done

    # register session masks with MNI
    if [ ! -f ${SESS}/anat_EPI_mask_MNI-lin.nii.gz ]; then
        3dAllineate \
            -prefix ${SESS}/anat_EPI_mask_MNI-lin.nii.gz \
            -input ${SESS}/anat_EPI_mask.nii.gz \
            -1Dmatrix_apply ${SESS}/mat_EPI_to_TAL.aff12.1D \
            -master ${DIR_DATA}/${DIR_EXPT}/anat_MNI.nii.gz \
            -float \
            -final NN \
            -mast_dxyz ${dims} ${dims} ${dims}
    fi
done
