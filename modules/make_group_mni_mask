#!/bin/bash
#
# make_group_mni_mask
#
# output:
# prereq: linreg_epi2mni_* OR nonlinreg_epi2mni_*
#
# Creates a group-level MNI mask using all available MNI space EPI masks.

echo '*** MODULE: make_group_mni_mask. Makes a group-level MNI brain mask. ****'

# create group linear registration mask of the EPI data in MNI space
if [ -f ${DIR_DATA}/${DIR_EXPT}/anat_EPI_mask_MNI_group.nii.gz ]; then
    rm ${DIR_DATA}/${DIR_EXPT}/anat_EPI_mask_MNI_group.nii.gz
fi

# try finding all nonlinear masks and count them
inputs=$(find ${DIR_DATA}/${DIR_EXPT} -name anat_EPI_mask_MNI-nonlin.nii.gz)
nfiles=$(echo ${inputs} | wc -l)
if [ ! ${nfiles} -eq 0 ]; then
    3dMean \
        -datum short \
        -prefix ${DIR_DATA}/${DIR_EXPT}/tmp_mean.nii.gz \
        ${inputs}

    3dcalc \
        -a ${DIR_DATA}/${DIR_EXPT}/tmp_mean.nii.gz \
        -expr 'step(a-0.999)' \
        -prefix ${DIR_DATA}/${DIR_EXPT}/anat_EPI_mask_MNI_group.nii.gz

    rm ${DIR_DATA}/${DIR_EXPT}/tmp_mean.nii.gz

# if we don't find any nonlinear masks, try linear
else

    # find all of the linear registered masks, and count them
    inputs=$(find ${DIR_DATA}/${DIR_EXPT} -name anat_EPI_mask_MNI-lin.nii.gz)
    nfiles=$(echo ${inputs} | wc -l)
    if [ ! ${nfiles} -eq 0 ]; then
        3dMean \
            -datum short \
            -prefix ${DIR_DATA}/${DIR_EXPT}/tmp_mean.nii.gz \
            ${inputs}

        3dcalc \
            -a ${DIR_DATA}/${DIR_EXPT}/tmp_mean.nii.gz \
            -expr 'step(a-0.999)' \
            -prefix ${DIR_DATA}/${DIR_EXPT}/anat_EPI_mask_MNI_group.nii.gz

        rm ${DIR_DATA}/${DIR_EXPT}/tmp_mean.nii.gz
    fi
fi
