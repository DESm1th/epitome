#!/bin/bash

cat <<EOF
export INPUT=$(echo func_${1})
export TRAINDATA=${2}
export THRESHOLD=${3}
export MOTIONREGRESS=${4}
export CLEANUP=${5}

EOF

cat <<"EOF"
echo '*** MODULE: ica_fix. runs FSL FIX using MELODIC outputs. ****************'

DIR_SESS=`ls -d -- ${DIR_DATA}/${DIR_EXPT}/${SUB}/${DATA_TYPE}/*/`
for SESS in `basename ${DIR_SESS}`; do
    DIR=`echo ${DIR_DATA}/${DIR_EXPT}/${SUB}/${DATA_TYPE}`
    DIR_T1=`echo ${DIR_DATA}/${DIR_EXPT}/${SUB}/T1`

    # If we have a T1 for each session, we register to the session T1.
    # Otherwise, we go to the first session.
    if [ `ls -l ${DIR} | grep ^d | wc -l` -eq `ls -l ${DIR_T1} | grep ^d | wc -l` ]; then
        ANAT_T1=`echo ${DIR_T1}/${SESS}/anat_T1_brain.nii.gz`
    else
        ANAT_T1=`echo ${DIR_T1}/SESS01/anat_T1_brain.nii.gz`
    fi

    DIR_RUNS=`ls -d -- ${DIR}/${SESS}/RUN*`
    for RUN in ${DIR_RUNS}; do
        NUM=`basename ${RUN} | sed 's/[^0-9]//g'`

        # run FIX X-noisifier -- no highpass options for now...
        if [ ! -f ${DIR}/${SESS}/func_fix.${ID}.${NUM}.nii.gz ]; then

            ## create a fake FEAT directory
            mkdir ${DIR}/${SESS}/fake.${ID}.${NUM}.feat
            mkdir ${DIR}/${SESS}/fake.${ID}.${NUM}.feat/reg
            mkdir ${DIR}/${SESS}/fake.${ID}.${NUM}.feat/mc

            ## copy relevent nifti inputs
            # melodic (command-line program) full output
            cp -r ${DIR}/${SESS}/MELODIC.${ID}.${NUM} ${DIR}/${SESS}/fake.${ID}.${NUM}.feat/filtered_func_data.ica

            # preprocessed 4D data
            cp ${DIR}/${SESS}/${INPUT}.${ID}.${NUM}.nii.gz ${DIR}/${SESS}/fake.${ID}.${NUM}.feat/filtered_func_data.nii.gz

            # raw data (for generating motion paramaters)
            cp ${DIR}/${SESS}/func_ob.${ID}.${NUM}.nii.gz ${DIR}/${SESS}/fake.${ID}.${NUM}.feat/mc/prefiltered_func_data.nii.gz

            # temporal mean of 4D data
            cp ${DIR}/${SESS}/anat_EPI_brain.nii.gz ${DIR}/${SESS}/fake.${ID}.${NUM}.feat/mean_func.nii.gz

            # valid mask relating to the 4D data
            cp ${DIR}/${SESS}/anat_EPI_mask.nii.gz ${DIR}/${SESS}/fake.${ID}.${NUM}.feat/mask.nii.gz

            ## generate FSL-friendly motion paramaters
            mcflirt \
                -in ${DIR}/${SESS}/fake.${ID}.${NUM}.feat/mc/prefiltered_func_data.nii.gz \
                -stats -mats -plots -report

            ## fill in registration folder
            # example image from 4D data
            cp ${DIR}/${SESS}/anat_EPI_brain.nii.gz ${DIR}/${SESS}/fake.${ID}.${NUM}.feat/reg/example_func.nii.gz

            # brain-extracted structural
            cp ${ANAT_T1} ${DIR}/${SESS}/fake.${ID}.${NUM}.feat/reg/highres.nii.gz

            # FLIRT transform from structural to functional space
            cp ${DIR}/${SESS}/mat_T1_to_EPI.mat ${DIR}/${SESS}/fake.${ID}.${NUM}.feat/reg/highres2example_func.mat

            # FSL FIXAFY TILL THE BREAK OF DAWN
            # https://www.youtube.com/watch?v=uu6DRAvHJVM
            if [ `echo ${MOTIONREGRESS}` == 'on' ];
            then
              fix ${DIR}/${SESS}/fake.${ID}.${NUM}.feat ${TRAINDATA}\
                  ${THRESHOLD} -m -h 0
            else
              fix ${DIR}/${SESS}/fake.${ID}.${NUM}.feat ${TRAINDATA} \
                  ${THRESHOLD}
            fi

            # copy output to SESS folder
            mv ${DIR}/${SESS}/fake.${ID}.${NUM}.feat/filtered_func_data_clean.nii.gz ${DIR}/${SESS}/func_fix.${ID}.${NUM}.nii.gz

            # X-destroyifiy fake.feat
            if [ `echo ${CLEANUP}` == 'on' ];
            then
              rm -r ${DIR}/${SESS}/fake.${ID}.${NUM}.feat
            fi
        fi
    done
done

EOF
