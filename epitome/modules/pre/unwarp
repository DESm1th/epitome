#!/bin/bash
#  Requires FSL (version 5.0.6), HCP-gradunwarp (HCP version 1.0.2)
MAG=0
REAL=2
IMAG=3
# DELTATE='2.46' # difference in TEs in ms (siemens)
# DELTATE='0.002'
DWELL='0.000684'

cat <<EOF
export INPUT=$(echo func_${1})
export METHOD=${2}

EOF

cat <<""
echo '*** MODULE: unwarp. Uses fieldmap to unwarp EPI images.******************'

DIR_SESS=`ls -d -- ${DIR_DATA}/${DIR_EXPT}/${SUB}/${DATA_TYPE}/*/`
for SESS in ${DIR_SESS}; do

    if [ ${METHOD} = 'SIEMENS' ] && [ ! -f ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/anat_fieldmap.nii.gz ]; then

        # WD=`getopt1 "--workingdir" $@` # "$1"
        # MagnitudeInputName=`getopt1 "--fmapmag" $@`  # "$2"
        # PhaseInputName=`getopt1 "--fmapphase" $@`  # "$3"

        # MagnitudeOutput=`getopt1 "--ofmapmag" $@`  # "$5"
        # MagnitudeBrainOutput=`getopt1 "--ofmapmagbrain" $@`  # "$6"
        # FieldMapOutput=`getopt1 "--ofmap" $@`  # "$8"
        # GradientDistortionCoeffs=`getopt1 "--gdcoeffs" $@`  # "$9"
        # #GlobalScripts="${10}"


        # take mean of magnitude image
        fslmaths \
            ${MagnitudeInputName} \
            -Tmean ${WD}/Magnitude

        #Brain extract the magnitude image
        bet \
            ${WD}/Magnitude ${WD}/Magnitude_brain \
            -f 0.35 \
            -m 

        # copies image (why not just use cp?)
        imcp \
            ${PhaseInputName} ${WD}/Phase

        # prepares fieldmap 
        fsl_prepare_fieldmap \
            SIEMENS \
            ${WD}/Phase \
            ${WD}/Magnitude_brain \
            ${WD}/FieldMap \
            ${DELTATE}

        # Extract first volume of fMRI to unwarp
        fslroi \
            ${InputFile}.nii.gz \
            ${WD}/${BaseName}_vol1.nii.gz \
            0 1

        # Calculate 
        # NB: gradient_unwarp.py *must* have the filename extensions written 
        #     out explicitly or it will crash
        InputCoeffs=`fsl_abspath $InputCoefficients`
        ORIGDIR=`pwd`
        cd ${WD}
        gradient_unwarp.py \
            ${BaseName}_vol1.nii.gz \
            trilinear.nii.gz \
            siemens \
            -g ${InputCoeffs} \
            -n
        cd ${ORIGDIR}

        # Create relative warpfield for functional data and brain mask
        convertwarp \
            --abs \
            --ref=${WD}/trilinear.nii.gz \
            --warp1=${WD}/fullWarp_abs.nii.gz \
            --relout \
            --out=${OutputTransform}

        applywarp \
            --rel \
            --interp=spline \
            -i ${InputFile} \
            -r ${WD}/${BaseName}_vol1.nii.gz \
            -w ${OutputTransform} \
            -o ${OutputFile}

        applywarp \
            --rel \
            --interp=nn \
            -i ${WD}/Magnitude_brain \
            -r ${WD}/Magnitude_brain \
            -w ${WD}/Magnitude_gdc_warp \
            -o ${WD}/Magnitude_brain_gdc

        # apply brain mask to magnitude image
        fslmaths \
            ${WD}/Magnitude_gdc \
            -mas ${WD}/Magnitude_brain_gdc $\
            {WD}/Magnitude_brain_gdc

        # double-erode magnitude image
        fslmaths \
            ${WD}/Magnitude_brain_gdc \
            -bin \
            -ero -ero \
            ${WD}/Magnitude_brain_gdc_ero

        # mask fieldmap and dilate 5X
        fslmaths \
            ${WD}/FieldMap \
            -mas ${WD}/Magnitude_brain_gdc_ero \
            -dilM -dilM -dilM -dilM -dilM \
            ${WD}/FieldMap_dil

        applywarp \
            --rel \
            --interp=spline \
            -i ${WD}/FieldMap_dil \
            -r ${WD}/FieldMap_dil \
            -w ${WD}/Magnitude_gdc_warp \
            -o ${WD}/FieldMap_gdc

        fslmaths \
            ${WD}/FieldMap_gdc \
            -mas ${WD}/Magnitude_brain_gdc \
            ${WD}/FieldMap_gdc

        imcp ${WD}/Magnitude_gdc ${MagnitudeOutput}
        imcp ${WD}/Magnitude_brain_gdc ${MagnitudeBrainOutput}
        cp ${WD}/FieldMap_gdc.nii.gz ${FieldMapOutput}.nii.gz

    elif [ ${METHOD} = 'GE' ] && [ ! -f ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/anat_fieldmap.nii.gz ]; then

        # extract magnitude, real, imag from fieldmap
        fslroi \
            ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/RUN01/*.nii.gz \
            ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/mag.01.nii.gz \
            ${MAG} 1

        fslroi \
            ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/RUN01/*.nii.gz \
            ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/real.01.nii.gz \
            ${REAL} 1

        fslroi \
            ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/RUN01/*.nii.gz \
            ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/imag.01.nii.gz \
            ${IMAG} 1

        fslroi \
            ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/RUN02/*.nii.gz \
            ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/mag.02.nii.gz \
            ${MAG} 1

        fslroi \
            ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/RUN02/*.nii.gz \
            ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/real.02.nii.gz \
            ${REAL} 1

        fslroi \
            ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/RUN02/*.nii.gz \
            ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/imag.02.nii.gz \
            ${IMAG} 1

        # brain extract the magnitude images
        bet \
            ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/mag.01.nii.gz \
            ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/mag_brain \
            -f 0.35 -m
        mv ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/mag_brain.nii.gz \
           ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/mag_brain.01.nii.gz
        mv ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/mag_brain_mask.nii.gz \
           ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/mag_brain_mask.01.nii.gz

        bet \
            ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/mag.02.nii.gz \
            ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/mag_brain \
            -f 0.35 -m 
        mv ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/mag_brain.nii.gz \
           ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/mag_brain.02.nii.gz
        mv ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/mag_brain_mask.nii.gz \
            ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/mag_brain_mask.02.nii.gz

        # deskull real / imag files for both TEs
        fslmaths \
            ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/real.01.nii.gz \
            -mul \
            ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/mag_brain_mask.01.nii.gz \
            ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/real_brain.01.nii.gz \
            -odt float

        fslmaths \
            ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/imag.01.nii.gz \
            -mul \
            ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/mag_brain_mask.01.nii.gz \
            ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/imag_brain.01.nii.gz \
            -odt float

        fslmaths \
            ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/real.02.nii.gz \
            -mul \
            ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/mag_brain_mask.02.nii.gz \
            ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/real_brain.02.nii.gz \
            -odt float

        fslmaths \
            ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/imag.02.nii.gz \
            -mul \
            ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/mag_brain_mask.02.nii.gz \
            ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/imag_brain.02.nii.gz \
            -odt float

        # co-register images
        flirt \
            -in ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/mag_brain.02.nii.gz \
            -ref ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/mag_brain.01.nii.gz \
            -out ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/reg_mag_to_mag.nii.gz \
            -omat ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/mat_mag_to_mag.mat

        flirt \
            -in ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/real_brain.02.nii.gz \
            -ref ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/mag_brain.01.nii.gz \
            -applyxfm \
            -init ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/mat_mag_to_mag.mat \
            -out ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/real_brain_reg.02.nii.gz

        flirt \
            -in ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/imag_brain.02.nii.gz \
            -ref ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/mag_brain.01.nii.gz \
            -applyxfm \
            -init ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/mat_mag_to_mag.mat \
            -out ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/imag_brain_reg.02.nii.gz

        # convert to single complex-valued image
         3dTwotoComplex \
            -prefix ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/cplx.01.nii.gz \
            ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/real_brain.01.nii.gz \
            ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/imag_brain.01.nii.gz

         3dTwotoComplex \
            -prefix ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/cplx.02.nii.gz \
            ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/real_brain_reg.02.nii.gz \
            ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/imag_brain_reg.02.nii.gz

        # calculate magnitude and phase map
        epi-conj \
            ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/cplx.01.nii.gz \
            ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/cplx.02.nii.gz \
            ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/amp.nii.gz \
            ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/phase.nii.gz

        # unwrap phase map
        prelude \
            -p ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/phase.nii.gz \
            -a ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/amp.nii.gz \
            -o ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/phase_uwrap.nii.gz

        # normalize by TE timing difference (in seconds) to create fieldmap
        3dcalc \
            -prefix ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/fieldmap.nii.gz \
            -a ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/phase_uwrap.nii.gz \
            -expr "a/$DELTATE"

        # register amplitude file with T1 image (already registered to epi)
        flirt \
            -in ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/amp.nii.gz \
            -ref ${DIR_DATA}/${DIR_EXPT}/${SUB}/${MODE}/${SESS}/reg_T1_to_epi.nii.gz
            -omat ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/mat_mag_to_epi.mat

        flirt \
            -in ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/fieldmap.nii.gz \
            -ref ${DIR_DATA}/${DIR_EXPT}/${SUB}/${MODE}/${SESS}/reg_T1_to_epi.nii.gz \
            -applyxfm \
            -init ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/mat_mag_to_epi.mat \
            -out ${DIR_DATA}/${DIR_EXPT}/${SUB}/FMAP/${SESS}/anat_fieldmap.nii.gz

        # below: HCP-method, which we've deviated from ... storing for
        # posterity until we're sure this fieldmap solution is working 
        # correctly

        # # convert fieldmap to degrees
        # fslmaths \
        #     ${WD}/FieldMap_deg.nii.gz \
        #     -mul 6.28 \
        #     ${WD}/FieldMap.nii.gz

        # # Extract first volume of fMRI to unwarp
        # fslroi \
        #     ${InputFile}.nii.gz \
        #     ${WD}/${BaseName}_vol1.nii.gz \
        #     0 1

        # # Calculate 
        # # NB: gradient_unwarp.py *must* have the filename extensions written 
        # #     out explicitly or it will crash
        # InputCoeffs=`fsl_abspath $InputCoefficients`
        # ORIGDIR=`pwd`
        # cd ${WD}
        # gradient_unwarp.py \
        #     ${BaseName}_vol1.nii.gz \
        #     trilinear.nii.gz \
        #     siemens \
        #     -g ${InputCoeffs} \
        #     -n
        # cd ${ORIGDIR}

        # # Create relative warpfield for functional data and brain mask
        # convertwarp \
        #     --abs \
        #     --ref=${WD}/trilinear.nii.gz \
        #     --warp1=${WD}/fullWarp_abs.nii.gz \
        #     --relout \
        #     --out=${OutputTransform}

        # applywarp \
        #     --rel \
        #     --interp=spline \
        #     -i ${InputFile} \
        #     -r ${WD}/${BaseName}_vol1.nii.gz \
        #     -w ${OutputTransform} \
        #     -o ${OutputFile}

        # applywarp \
        #     --rel \
        #     --interp=nn \
        #     -i ${WD}/Magnitude_brain \
        #     -r ${WD}/Magnitude_brain \
        #     -w ${WD}/Magnitude_gdc_warp \
        #     -o ${WD}/Magnitude_brain_gdc

        # fslmaths \
        #     ${WD}/Magnitude_gdc \
        #     -mas ${WD}/Magnitude_brain_gdc \
        #     ${WD}/Magnitude_brain_gdc

        # fslmaths \
        #     ${WD}/Magnitude_brain_gdc \
        #     -bin \
        #     -ero -ero \
        #     ${WD}/Magnitude_brain_gdc_ero

        # fslmaths \
        #     ${WD}/FieldMap \
        #     -mas ${WD}/Magnitude_brain_gdc_ero \
        #     -dilM -dilM -dilM -dilM -dilM \
        #     ${WD}/FieldMap_dil

        # applywarp \
        #     --rel \
        #     --interp=spline \
        #     -i ${WD}/FieldMap_dil \
        #     -r ${WD}/FieldMap_dil \
        #     -w ${WD}/Magnitude_gdc_warp \
        #     -o ${WD}/FieldMap_gdc

        # fslmaths \
        #     ${WD}/FieldMap_gdc \
        #     -mas ${WD}/Magnitude_brain_gdc \
        #     ${WD}/FieldMap_gdc

        # imcp ${WD}/Magnitude_gdc ${MagnitudeOutput}
        # imcp ${WD}/Magnitude_brain_gdc ${MagnitudeBrainOutput}
        # cp ${WD}/FieldMap_gdc.nii.gz ${FieldMapOutput}.nii.gz

    fi

    DIR_RUNS=`ls -d -- ${SESS}/RUN*`
    for RUN in ${DIR_RUNS}; do
        NUM=`basename ${RUN} | sed 's/[^0-9]//g'`

        if [ ! -f ${SESS}/func_detrend.${ID}.${NUM}.nii.gz ]; then

            # produce mean
            3dTstat \
                -prefix ${SESS}/func_mean.${ID}.${NUM}.nii.gz \
                -mean ${SESS}/${INPUT}.${ID}.${NUM}.nii.gz

            # detrend data
            3dDetrend \
                -prefix ${SESS}/func_tmp_detrend.${ID}.${NUM}.nii.gz \
                -polort ${POLORT} \
                ${SESS}/${INPUT}.${ID}.${NUM}.nii.gz

            # add mean back into detrended data
            3dcalc \
                -prefix ${SESS}/func_detrend.${ID}.${NUM}.nii.gz \
                -a ${SESS}/func_tmp_detrend.${ID}.${NUM}.nii.gz \
                -b ${SESS}/func_mean.${ID}.${NUM}.nii.gz \
                -expr 'a+b'
        fi
    done
done


# More stuff from the HCP pipelines ... not sure why they are unwarping the scout?
# cp ${ScoutInputName}.nii.gz ${WD}/Scout.nii.gz

# # Test if Magnitude Brain and T1w Brain Are Similar in Size, if not, assume Magnitude Brain Extraction 
# # Failed and Must Be Retried After Removing Bias Field
# MagnitudeBrainSize=`fslstats ${WD}/Magnitude_brain -V | cut -d " " -f 2`
# T1wBrainSize=`fslstats ${WD}/${T1wBrainImageFile} -V | cut -d " " -f 2`

# if [[ X`echo "if ( (${MagnitudeBrainSize} / ${T1wBrainSize}) > 1.25 ) {1}" | bc -l` = X1 || X`echo "if ( (${MagnitudeBrainSize} / ${T1wBrainSize}) < 0.75 ) {1}" | bc -l` = X1 ]] ; then
#     flirt -interp spline -dof 6 -in ${WD}/Magnitude.nii.gz -ref ${T1wImage} -omat "${WD}"/Mag2T1w.mat -out ${WD}/Magnitude2T1w.nii.gz -searchrx -30 30 -searchry -30 30 -searchrz -30 30
#     convert_xfm -omat "${WD}"/T1w2Mag.mat -inverse "${WD}"/Mag2T1w.mat
#     applywarp --interp=nn -i ${WD}/${T1wBrainImageFile} -r ${WD}/Magnitude.nii.gz --premat="${WD}"/T1w2Mag.mat -o ${WD}/Magnitude_brain_mask.nii.gz    
#     fslmaths ${WD}/Magnitude_brain_mask.nii.gz -bin ${WD}/Magnitude_brain_mask.nii.gz
#     fslmaths ${WD}/Magnitude.nii.gz -mas ${WD}/Magnitude_brain_mask.nii.gz ${WD}/Magnitude_brain.nii.gz

#     flirt -interp spline -dof 6 -in ${WD}/Scout.nii.gz -ref ${T1wImage} -omat "${WD}"/Scout2T1w.mat -out ${WD}/Scout2T1w.nii.gz -searchrx -30 30 -searchry -30 30 -searchrz -30 30
#     convert_xfm -omat "${WD}"/T1w2Scout.mat -inverse "${WD}"/Scout2T1w.mat
#     applywarp --interp=nn -i ${WD}/${T1wBrainImageFile} -r ${WD}/Scout.nii.gz --premat="${WD}"/T1w2Scout.mat -o ${WD}/Scout_brain_mask.nii.gz    
#     fslmaths ${WD}/Scout_brain_mask.nii.gz -bin ${WD}/Scout_brain_mask.nii.gz
#     fslmaths ${WD}/Scout.nii.gz -mas ${WD}/Scout_brain_mask.nii.gz ${WD}/Scout_brain.nii.gz

#     # register scout to T1w image using fieldmap
#     ${HCPPIPEDIR_Global}/epi_reg_dof --dof=${dof} --epi=${WD}/Scout_brain.nii.gz --t1=${T1wImage} --t1brain=${WD}/${T1wBrainImageFile} --out=${WD}/${ScoutInputFile}_undistorted --fmap=${WD}/FieldMap.nii.gz --fmapmag=${WD}/Magnitude.nii.gz --fmapmagbrain=${WD}/Magnitude_brain.nii.gz --echospacing=${DwellTime} --pedir=${UnwarpDir}

# else
#     # register scout to T1w image using fieldmap
#     ${HCPPIPEDIR_Global}/epi_reg_dof --dof=${dof} --epi=${WD}/Scout.nii.gz --t1=${T1wImage} --t1brain=${WD}/${T1wBrainImageFile} --out=${WD}/${ScoutInputFile}_undistorted --fmap=${WD}/FieldMap.nii.gz --fmapmag=${WD}/Magnitude.nii.gz --fmapmagbrain=${WD}/Magnitude_brain.nii.gz --echospacing=${DwellTime} --pedir=${UnwarpDir}

# fi

# # create spline interpolated output for scout to T1w + apply bias field correction
# applywarp --rel --interp=spline -i ${ScoutInputName} -r ${T1wImage} -w ${WD}/${ScoutInputFile}_undistorted_warp.nii.gz -o ${WD}/${ScoutInputFile}_undistorted_1vol.nii.gz
# fslmaths ${WD}/${ScoutInputFile}_undistorted_1vol.nii.gz -div ${BiasField} ${WD}/${ScoutInputFile}_undistorted_1vol.nii.gz
# immv ${WD}/${ScoutInputFile}_undistorted_1vol.nii.gz ${WD}/${ScoutInputFile}_undistorted2T1w_init.nii.gz

# # Jacobian Volume FAKED for Regular Fieldmaps (all ones)
# fslmaths ${T1wImage} -abs -add 1 -bin ${WD}/Jacobian2T1w.nii.gz
EOF
