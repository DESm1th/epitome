#!/bin/bash

cat <<EOF
export INPUT=$(echo 'func_'${1})
export POLORT=$(echo ${2})
export STD=$(echo ${3})
export GM=$(echo ${4})
export ANATICOR=$(echo ${5})
export COMPCOR=$(echo ${6})
export DV=$(echo ${7})


# export INPUT=$(echo 'func_'${1})
# export POLORT=$(echo ${2})
# export GS_FLAG=$(echo ${3})
# export VENT_FLAG=$(echo ${4})
# export DV_FLAG=$(echo ${5})
# export WM_LOC_FLAG=$(echo ${6})
# export WM_GLO_FLAG=$(echo ${7})
# export PC_FLAG=$(echo ${8})

EOF

cat <<"EOF"

echo '************************************************************************'
echo '                    Time series filtering of fMRI data'
echo ''
echo '   - Creates a set of regressors from '${INPUT}' functional data and'
echo '     a freesurfer segmentation. Outputs:'
echo ''
echo '         - MASKS:'
echo '             - white matter + eroded mask,'
echo '             - ventricles + eroded mask,'
echo '             - grey matter mask,'
echo '             - brain stem mask,'
echo '             - dialated brain mask,'
echo '             - draining vessels mask,'
echo ''
echo '         - REGRESSORS:'
echo '             - white matter: local (15mm sphere) and average, + lags'
echo '             - ventricles averaged + lagged,'
echo '             - draining vessel averaged + lagged.'
echo ''
echo '   - Computes nusiance time series from tissues, motion paramaters,'
echo '   - Optionally uses the global mean: '${GS_FLAG}','
echo '   - Optionally uses the ventricles: '${VENT_FLAG}','
echo '   - Optionally uses the draining vessels: '${DV_FLAG}','
echo '   - Optionally uses the local white matter: '${WM_LOC_FLAG}','
echo '   - Optionally uses the mean white matter: '${WM_GLO_FLAG}','
echo '   - Detrends each with legrende polynomials up to order '${POLORT}','
echo '   - Computes fit of run with nusiances via least squares regression,'
echo '   - Computes temporal signal to noise ratio,'
echo '   - Subtracts noise model from each voxel, retaining the mean.'
echo ''
echo '************************************************************************'

cd /tmp

DIR_SESS=`ls -d -- ${DIR_DATA}/${DIR_EXPT}/${SUB}/${DATA_TYPE}/*/`
for SESS in ${DIR_SESS}; do
    SESS=`basename ${SESS}`
    DIR=`echo ${DIR_DATA}/${DIR_EXPT}/${SUB}/${DATA_TYPE}/${SESS}`

    ## Make Masks ##
    
    # eroded white matter mask
    if [ ! -f ${DIR}/anat_wm_ero.nii.gz ]; then
        3dcalc \
            -a ${DIR}/anat_aparc_reg.nii.gz \
            -expr "equals(a,2)  + \
                   equals(a,7)  + \
                   equals(a,41) + \
                   equals(a,46) + \
                   equals(a,251)+ \
                   equals(a,252)+ \
                   equals(a,253)+ \
                   equals(a,254)+ \
                   equals(a,255)" \
            -prefix ${DIR}/anat_wm.nii.gz

        3dcalc \
            -a ${DIR}/anat_wm.nii.gz \
            -b a+i -c a-i -d a+j -e a-j -f a+k -g a-k \
            -expr 'a*(1-amongst(0,b,c,d,e,f,g))' \
            -prefix ${DIR}/anat_wm_ero.nii.gz
    fi

    # eroded ventricle mask
    if [ ! -f ${DIR}/anat_vent_ero.nii.gz ]; then
        3dcalc \
            -a ${DIR}/anat_aparc_reg.nii.gz \
            -expr 'equals(a,4) + equals(a,43)' \
            -prefix ${DIR}/anat_vent.nii.gz

        3dcalc \
            -a ${DIR}/anat_aparc_reg.nii.gz \
            -expr "equals(a,10) + \
                   equals(a,11) + \
                   equals(a,26) + \
                   equals(a,49) + \
                   equals(a,50) + \
                   equals(a,58)" \
            -prefix ${DIR}/anat_tmp_nonvent.nii.gz

        3dcalc \
            -a ${DIR}/anat_tmp_nonvent.nii.gz \
            -b a+i -c a-i -d a+j -e a-j -f a+k -g a-k \
            -expr 'amongst(1,a,b,c,d,e,f,g)' \
            -prefix ${DIR}/anat_tmp_nonvent_dia.nii.gz

        3dcalc \
            -a ${DIR}/anat_vent.nii.gz \
            -b ${DIR}/anat_tmp_nonvent_dia.nii.gz \
            -expr 'a-step(a*b)' \
            -prefix ${DIR}/anat_vent_ero.nii.gz
    fi

    # grey matter mask
    if [ ! -f ${DIR}/anat_gm.nii.gz ]; then
        3dcalc \
            -a ${DIR}/anat_aparc_reg.nii.gz \
            -short \
            -expr 'step(a-1000)*step(1036-a)+step(a-2000)*step(2036-a)' \
            -prefix ${DIR}/anat_gm.nii.gz
    fi

    # dialated brain mask
    if [ ! -f ${DIR}/anat_EPI_mask_dia.nii.gz ]; then
        3dcalc \
            -a ${DIR}/anat_EPI_mask.nii.gz \
            -b a+i -c a-i -d a+j -e a-j -f a+k -g a-k \
            -expr 'amongst(1,a,b,c,d,e,f,g)' \
            -prefix ${DIR}/anat_EPI_mask_dia.nii.gz
    fi

    # brainstem mask
    if [ ! -f ${DIR}/anat_bstem.nii.gz ]; then
        3dcalc \
            -a ${DIR}/anat_aparc_reg.nii.gz \
            -expr "equals(a,8)  + \
                   equals(a,47) + \
                   equals(a,16) + \
                   equals(a,12) + \
                   equals(a,13) + \
                   equals(a,26) + \
                   equals(a,51) + \
                   equals(a,52) + \
                   equals(a,17) + \
                   equals(a,18) + \
                   equals(a,53) + \
                   equals(a,54) + \
                   equals(a,58) + \
                   equals(a,28) + \
                   equals(a,60)" \
            -prefix ${DIR}/anat_bstem.nii.gz
    fi

    # eroded draining vessel mask
    if [ ! -f ${DIR}/anat_dv_ero.nii.gz ]; then
        3dcalc \
            -a ${DIR}/anat_EPI_mask.nii.gz \
            -b ${DIR}/anat_gm.nii.gz \
            -c ${DIR}/anat_wm.nii.gz \
            -d ${DIR}/anat_vent.nii.gz \
            -e ${DIR}/anat_tmp_nonvent.nii.gz \
            -f ${DIR}/anat_bstem.nii.gz \
            -expr '(a-b-c-d-e-f)' \
            -prefix ${DIR}/anat_dv.nii.gz
        
        3dcalc \
            -a ${DIR}/anat_dv.nii.gz \
            -b a+i -c a-i -d a+j -e a-j -f a+k -g a-k \
            -expr 'a*(1-amongst(0,b,c,d,e,f,g))' \
            -prefix ${DIR}/anat_dv_ero.nii.gz
    fi

    DIR_RUNS=`ls -d -- ${DIR}/RUN*`
    for RUN in ${DIR_RUNS}; do
        NUM=`basename ${RUN} | sed 's/[^0-9]//g'`

        # detrend functional data and motion paramaters (and calculate tsnr)
        if [ ! -f ${DIR}/func_detrend.${ID}.${NUM}.nii.gz ]; then
            
            # compute mean, standard deviation
            3dTstat \
                -prefix ${SESS}/func_tmp_mean.${ID}.${NUM}.nii.gz \
                -mean ${SESS}/${INPUT}.${ID}.${NUM}.nii.gz

            3dTstat \
                -prefix ${SESS}/func_tmp_stdev.${ID}.${NUM}.nii.gz \
                -stdev ${SESS}/${INPUT}.${ID}.${NUM}.nii.gz
            
            # compute temporal SNR (pre anything)
            3dcalc \
                -a ${SESS}/func_tmp_mean.${ID}.${NUM}.nii.gz \
                -b ${SESS}/func_tmp_stdev.${ID}.${NUM}.nii.gz \
                -expr 'a/b' \
                -prefix ${SESS}/func_tSNR.${ID}.${NUM}.nii.gz

            # detrend input data (before calculating regressors...)
            3dDetrend \
                -prefix ${SESS}/func_detrend.${ID}.${NUM}.nii.gz \
                -polort ${POLORT} \
                ${SESS}/${INPUT}.${ID}.${NUM}.nii.gz

            # detrend motion paramaters
            3dDetrend \
                -prefix - \
                -DAFNI_1D_TRANOUT=YES \
                -polort ${POLORT} \
                ${SESS}/PARAMS/motion.${ID}.${NUM}.1D\' > \
                ${SESS}/PARAMS/det.motion.${ID}.${NUM}.1D

            3dDetrend \
                -prefix - \
                -DAFNI_1D_TRANOUT=YES \
                -polort ${POLORT} \
                ${SESS}/PARAMS/lag.motion.${ID}.${NUM}.1D\' > \
                ${SESS}/PARAMS/det.lag.motion.${ID}.${NUM}.1D
            
            # detrend physiological regressors, if they exist
            if [ -f ${SESS}/PARAMS/phys.${ID}.${NUM}.1D ]; then
                3dDetrend \
                    -prefix - \
                    -DAFNI_1D_TRANOUT=YES \
                    -polort ${POLORT} \
                    ${SESS}/PARAMS/phys.${ID}.${NUM}.1D\' > \
                    ${SESS}/PARAMS/det.phys.${ID}.${NUM}.1D
            fi

        fi 

        # initialize filter command
        if [ ! -f ${SESS}/func_noise.${ID}.${NUM}.nii.gz ]; then
            
            # start with the standard motion-parameter regressors
            CMD=`echo 3dTfitter \
                          -prefix ${SESS}/func_noise_betas.${ID}.${NUM}.nii.gz \
                          -fitts ${SESS}/func_noise.${ID}.${NUM}.nii.gz \
                          -polort 0 \
                          -RHS ${SESS}/func_detrend.${ID}.${NUM}.nii.gz \
                          -LHS ${SESS}/PARAMS/det.motion.${ID}.${NUM}.1D \
                               ${SESS}/PARAMS/det.lag.motion.${ID}.${NUM}.1D `

            # add the physio regressors if they exist
            if [ -f ${SESS}/PARAMS/det.phys.${ID}.${NUM}.1D ]; then
                CMD=`echo ${CMD} ${SESS}/PARAMS/det.phys.${ID}.${NUM}.1D`
            fi

            if [ `echo ${STD}` = 'on' ]; then

                # white matter mean (+ lag)
                if [ ! -f ${DIR}/PARAMS/wm.${ID}.${NUM}.1D ]; then
                    3dmaskave \
                        -q -mask ${DIR}/anat_wm_ero.nii.gz \
                        ${DIR}/${INPUT}.${ID}.${NUM}.nii.gz > \
                        ${DIR}/PARAMS/wm.${ID}.${NUM}.1D
                    
                    1dcat \
                        ${DIR}/PARAMS/wm.${ID}.${NUM}.1D'{0}' > \
                        ${DIR}/PARAMS/lag.wm.${ID}.${NUM}.1D
                    
                    1dcat \
                        ${DIR}/PARAMS/wm.${ID}.${NUM}.1D'{0..$}' >> \
                        ${DIR}/PARAMS/lag.wm.${ID}.${NUM}.1D
                fi

                # ventricle mean (+ lag)
                if [ ! -f ${DIR}/PARAMS/lag.vent.${ID}.${NUM}.1D ]; then
                    3dmaskave \
                        -q -mask ${DIR}/anat_vent_ero.nii.gz \
                        ${DIR}/${INPUT}.${ID}.${NUM}.nii.gz > \
                        ${DIR}/PARAMS/vent.${ID}.${NUM}.1D
                    
                    1dcat \
                        ${DIR}/PARAMS/vent.${ID}.${NUM}.1D'{0}' > \
                        ${DIR}/PARAMS/lag.vent.${ID}.${NUM}.1D
                    
                    1dcat \
                        ${DIR}/PARAMS/vent.${ID}.${NUM}.1D'{0..$}' >> \
                        ${DIR}/PARAMS/lag.vent.${ID}.${NUM}.1D
                fi

                CMD=`echo ${CMD} ${SESS}/PARAMS/vent.${ID}.${NUM}.1D`
                CMD=`echo ${CMD} ${SESS}/PARAMS/lag.vent.${ID}.${NUM}.1D`
                CMD=`echo ${CMD} ${SESS}/PARAMS/wm.${ID}.${NUM}.1D`
                CMD=`echo ${CMD} ${SESS}/PARAMS/lag.wm.${ID}.${NUM}.1D`
            fi

            if [ `echo ${GM}` = 'on' ]; then

                # global mean (+ lag)
                if [ ! -f ${SESS}/PARAMS/global_mean.${ID}.${NUM}.1D ]; then
                    3dmaskave \
                        -mask ${SESS}/anat_EPI_mask.nii.gz \
                        -quiet ${SESS}/func_scaled.${ID}.${NUM}.nii.gz \
                        > ${SESS}/PARAMS/global_mean.${ID}.${NUM}.1D
                fi

                if [ ! -f ${DIR}/PARAMS/lag.global_mean.${ID}.${NUM}.1D ]; then
                    1dcat \
                        ${DIR}/PARAMS/global_mean.${ID}.${NUM}.1D'{0}' > \
                        ${DIR}/PARAMS/lag.global_mean.${ID}.${NUM}.1D
                    
                    1dcat \
                        ${DIR}/PARAMS/global_mean.${ID}.${NUM}.1D'{0..$}' >> \
                        ${DIR}/PARAMS/lag.global_mean.${ID}.${NUM}.1D
                fi
   
                CMD=`echo ${CMD} ${SESS}/PARAMS/global_mean.${ID}.${NUM}.1D`
                CMD=`echo ${CMD} ${SESS}/PARAMS/lag.global_mean.${ID}.${NUM}.1D`
            fi

            if [ `echo ${ANATICOR}` = 'on' ]; then
                
                # local white matter (+ lag)
                if [ ! -f ${DIR}/PARAMS/lag.wm_local15.${ID}.${NUM}.nii.gz ]; then
                    3dLocalstat \
                        -prefix ${DIR}/PARAMS/wm_local15.${ID}.${NUM}.nii.gz \
                        -nbhd 'SPHERE(15)' \
                        -stat mean \
                        -mask ${DIR}/anat_wm_ero.nii.gz \
                        -use_nonmask ${DIR}/${INPUT}.${ID}.${NUM}.nii.gz

                    3dTcat \
                        -prefix ${DIR}/PARAMS/lag.wm_local15.${ID}.${NUM}.nii.gz \
                        ${DIR}/PARAMS/wm_local15.${ID}.${NUM}.nii.gz'[0]' \
                        ${DIR}/PARAMS/wm_local15.${ID}.${NUM}.nii.gz'[0..$]'
                fi

                CMD=`echo ${CMD} ${SESS}/PARAMS/det.wm_local15.${ID}.${NUM}.nii.gz`
                CMD=`echo ${CMD} ${SESS}/PARAMS/det.lag.wm_local15.${ID}.${NUM}.nii.gz`
            fi

            if [ `echo ${COMPCOR}` = 'on' ]; then

                # create lagged top pc time series
                if [ ! -f ${DIR}/PARAMS/lag.top_pc.${ID}.${NUM}.1D ]; then
                    1dcat \
                        ${DIR}/PARAMS/top_pc.${ID}.${NUM}.1D'{0}' > \
                        ${DIR}/PARAMS/lag.top_pc.${ID}.${NUM}.1D
                    
                    1dcat \
                        ${DIR}/PARAMS/top_pc.${ID}.${NUM}.1D'{0..$}' >> \
                        ${DIR}/PARAMS/lag.top_pc.${ID}.${NUM}.1D
                fi

                CMD=`echo ${CMD} ${SESS}/PARAMS/det.top_pc.${ID}.${NUM}.1D`
                CMD=`echo ${CMD} ${SESS}/PARAMS/det.lag.top_pc.${ID}.${NUM}.1D`
            fi

            if [ `echo ${DV}` = 'on' ]; then

                # create mean draining vessel time series (+ lagged)
                if [ ! -f ${DIR}/PARAMS/lag.dv.${ID}.${NUM}.1D ]; then
                    3dmaskave \
                        -q -mask ${DIR}/anat_dv_ero.nii.gz \
                        ${DIR}/${INPUT}.${ID}.${NUM}.nii.gz > \
                        ${DIR}/PARAMS/dv.${ID}.${NUM}.1D
                    
                    1dcat \
                        ${DIR}/PARAMS/dv.${ID}.${NUM}.1D'{0}' > \
                        ${DIR}/PARAMS/lag.dv.${ID}.${NUM}.1D
                    
                    1dcat \
                        ${DIR}/PARAMS/dv.${ID}.${NUM}.1D'{0..$}' >> \
                        ${DIR}/PARAMS/lag.dv.${ID}.${NUM}.1D
                fi

                CMD=`echo ${CMD} ${SESS}/PARAMS/det.dv.${ID}.${NUM}.1D`
                CMD=`echo ${CMD} ${SESS}/PARAMS/det.lag.dv.${ID}.${NUM}.1D`
            fi

            ####################################################################

            # Finally, echo  run the command
            echo '****************************'
            echo 'Filtering time series using:'
            echo ${CMD}
            echo '****************************'
            ${CMD}

            # subtracts nuisances from inputs, retaining the mean
            3dcalc \
                -float \
                -a ${SESS}/func_detrend.${ID}.${NUM}.nii.gz \
                -b ${SESS}/func_noise.${ID}.${NUM}.nii.gz \
                -c ${SESS}/func_tmp_mean.${ID}.${NUM}.nii.gz \
                -expr 'a-b+c' \
                -prefix ${SESS}/func_filtered.${ID}.${NUM}.nii.gz

        fi

    done
    rm ${SESS}/func_tmp_*
done
cd ${DIR_PIPE}

EOF
