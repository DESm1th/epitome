#!/usr/bin/env python
"""
Takes a proclist created using epitome run and submits it to the installed
Oracle Sun Grid Engine using qsub.
"""

import os, sys
import random
import string
import subprocess
import epitome as epi


def init(input_file):
    """
    Opens the input file, and generates a unique string for each run.
    This keeps jobs submitted by multiple users distinct.
    """
    # replace proclist with cmd for identifying subject-wise scripts
    command_file = 'cmd_' + input_file[9:]

    queue = epi.config.return_queue()

    f = open(input_file)
    f = f.read()

    # used to keep freesurfer + qc jobs distinct
    u_id = ''.join(random.choice(string.ascii_uppercase + 
                                 string.digits) for _ in range(6))

    submit_jobs(f, u_id, queue, command_file)

def submit_jobs(f, u_id, queue, command_file):
    """
    Parses the submitted proclist and generates a set of qsub commands.
    """
    sublist = []
    fslist = []
    for i, line in enumerate(f.split('\n')):

        # skip empty entries
        if len(line) == 0:
            continue

        # parsed line
        name = (line.replace('/', ' ').split(' ')[-1][0:-3] + '_' + str(i))

        # freesurfer recon-alls
        if line[0:9] == 'recon-all':
            fsname = 'epitome_fs_' + u_id + '_' + str(i)
            log = fsname + '.log'
            cmd = """echo {line} | qsub -o {log} -S /bin/bash -V -q {queue} \
                     -cwd -N {name} -l mem_free=6G,virtual_free=6G -j y \
                  """.format(line=line, log=log, queue=queue, name=fsname)
            fslist.append(fsname)

        # freesurfer exports
        elif line.find('fsexport') >= 0:
            fsexportname = 'epitome_fsexport_' + u_id
            log = fsexportname + '.log'
            cmd = """echo {line} | qsub -o {log} -S /bin/bash -V -q {queue} \
                     -hold_jid {hold} -cwd -N {name} \
                  """.format(line=line, log=log, hold=",".join(fslist),
                                                 queue=queue, name=fsexportname)
            
        # preprocessing
        elif line.find(command_file) >= 0:
            cmdname = 'epitome_cmd_' + name
            log = cmdname + '.log'
            cmd = """echo {line} | qsub -o {log} -S /bin/bash -V -q {queue} \
                     -hold_jid {hold} -cwd -N {name} \
                  """.format(line=line, log=log, hold=fsexportname,
                                                 queue=queue, name=cmdname)
            sublist.append(cmdname)
            
        # qc
        else:
            qcname = 'qsub_qc_' + u_id + '_' + str(i)
            log = qcname + '.log'
            cmd = """echo {line} | qsub -o {log} -S /bin/bash -V -q {queue} \
                     -hold_jid  {hold} -cwd -N {name} \
                  """.format(line=line, log=log, hold=",".join(sublist),
                                                 queue=queue, name=qcname)

        # open a subprocess, print the result to the console
        pipe = subprocess.Popen(cmd, shell=True,
                                     executable='/bin/bash',
                                     stdout=subprocess.PIPE, 
                                     stderr=subprocess.PIPE)
        out, err = pipe.communicate()
        result = out.decode()
        print(result)

if __name__ == "__main__":
    
    if len(sys.argv) != 2:
        print('epiqueue requires one proclist input file')
        sys.exit()

    else:
      input_file = str(sys.argv[1])
      init(input_file)
