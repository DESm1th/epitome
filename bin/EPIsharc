#!/usr/bin/env python
"""
Takes a proclist created using EPItome run and submits it to the installed
Oracle Sun Grid Engine using qsub.
"""

import os, sys
import random
import string
import shlex
import subprocess

def init(input_file):
    """
    Opens the input file, and generates a unique string for each run.
    This keeps jobs submitted by multiple users distinct.
    """

    f = open(input_file)
    f = f.read()

    # used to keep freesurfer + qc jobs distinct
    u_id = ''.join(random.choice(string.ascii_uppercase + 
                                 string.digits) for _ in range(6))

    submit_jobs(f, u_id)

def submit_jobs(f, u_id):
    """
    Parses the submitted proclist and generates a set of qsub commands.
    """
    subjlist = []
    for i, line in enumerate(f.split('\n')):

        if len(line) == 0:
            continue

        # freesurfer
        if i == 0:
            name = 'qsub_freesurfer_' + u_id + '_0'
            logfile = (name + '.log')
            cmd = ('echo ' + line + ' | qsub -o ' + logfile + ' ' + 
                   '-S /bin/bash -V ' +
                   '-q epitome -cwd -N ' + name)


        elif i == 1:
            name = 'qsub_freesurfer_' + u_id + '_1'
            logfile = (name + '.log')
            cmd = ('echo ' + line + ' | qsub -o ' + logfile + ' ' +
                   '-S /bin/bash -V ' +
                   '-hold_jid freesurfer_' + u_id + '_0 ' +
                   '-q epitome -cwd -N ' + name)

        # subject-wise commands + QC
        else:
            name = (line.replace('/', ' ').split(' ')[-1][0:-3] + '_' + str(i))
            name = 'qsub_' + name
            # preprocessing
            if len(name) > 4:
                logfile = (name + '.log')
                cmd = ('echo ' + line + ' | qsub -o ' + logfile + ' ' +
                       '-S /bin/bash -V ' +
                       '-hold_jid freesurfer_' + u_id + '_1 ' + 
                       '-q epitome -cwd -N ' + name)
                subjlist.append(name)
            
            # qc
            else:
                name = 'qsub_qc_' + u_id + '_' + str(i)
                logfile = (name + '.log')
                cmd = ('echo ' + line + ' | qsub -o ' + logfile + ' ' +
                       '-S /bin/bash -V ' +
                       '-hold_jid ' + ",".join(subjlist) + ' ' +
                       '-q epitome -cwd -N ' + name)


        # open a subprocess, print the result to the console
        pipe = subprocess.Popen(cmd, shell=True,
                                     executable='/bin/bash',
                                     stdout=subprocess.PIPE, 
                                     stderr=subprocess.PIPE)
        out, err = pipe.communicate()
        result = out.decode()
        print(result)

if __name__ == "__main__":
    
    if len(sys.argv) != 2:
        print('EPIsharc requires one proclist input file')
        sys.exit()

    else:
      input_file = str(sys.argv[1])
      init(input_file)


# COUNT=1
# while read LINE; do

#     sqsub -r 23h --memperproc=2.5G -o out${COUNT}.out -q serial ${LINE}
#     COUNT=$(($COUNT ++ 1))
#     #echo ${LINE} | qsub -o log.log -S /bin/bash -V -cwd -N fs

# done < fs_queue.sh